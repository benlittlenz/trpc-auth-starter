import type { NextPage } from "next";
import Head from "next/head";
import { Toaster } from "react-hot-toast";
import { z } from "zod";
import { Button } from "../ui/Button";
import { Form } from "../ui/form/Form";
import { Input } from "../ui/form/Input";
import Tabs from "../ui/Tabs";
import showToast from "../ui/Toast";
import { trpc } from "../utils/trpc";

const schema = z.object({
  blah: z.string().min(2),
  hey: z.string().min(50),
});

type TechnologyCardProps = {
  name: string;
  description: string;
  documentation: string;
};

type TestValues = {
  blah: string;
  hey: string;
};

const Home: NextPage = () => {
  const hello = trpc.useQuery(["example.hello", { text: "from tRPC" }]);
  const { mutateAsync } = trpc.useMutation(["example.send-email"]);

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container mx-auto flex flex-col items-center justify-center min-h-screen p-4">
        <button
          onClick={() => showToast("Successfully registered!", "success")}
        >
          SHOW TOAST
        </button>
        <Form<TestValues, typeof schema>
          onSubmit={(values) => console.log(values)}
          schema={schema}
          options={{
            shouldUnregister: true,
          }}
        >
          {({ register, formState }) => (
            <>
              <Input
                label="Blah field"
                type="text"
                name="blah"
                registration={register("blah")}
              />
              <Input
                label="Hey field"
                type="text"
                name="hey"
                registration={register("hey")}
              />
              <Button type="submit">Click here</Button>
            </>
          )}
        </Form>
      </main>
      <Toaster position="bottom-right" />
    </>
  );
};

export default Home;
